#ifndef LEVEL_DATA_H
#define LEVEL_DATA_H

#include "include.h"

#define DIR_UP    1
#define DIR_DOWN  2
#define DIR_LEFT  3
#define DIR_RIGHT 4

/*
 * Byte 1:      Background (1, 2, 3, 4) (default to 1)
 * Byte 2:      Treasure Hut Index (1, 2, 3, 4, 5, 6) (0 = no treasure hut)
 * Byte 3:      Cottage #1 Direction (1, 2, 3, 4) (0 = does not exist)
 * Bytes 4-5:   Cottage #1 X (dstrect.x = OBJ_TO_SCREEN_AT_FRACTION_X(cottage, (VAL+2466)/5000.0))
 * Bytes 6-7:   Cottage #1 Y (dstrect.y = OBJ_TO_SCREEN_AT_FRACTION_Y(cottage, (VAL+2183)/3600.0))
 * ...
 * Byte 28:     Cottage #6 Direction
 * Bytes 29-30: Cottage #6 X
 * Bytes 31-32: Cottage #6 Y
 */
// negative decimal to Sint16: https://www.mathsisfun.com/binary-decimal-hexadecimal-converter.html
const Sint16 levels[33][20] = {
	/* 1 */ { 1, 0,
	DIR_LEFT, 1585, -666,
	DIR_RIGHT, -1813, 291,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 2 */ { 1, 0,
	DIR_DOWN, 1775, -1096,
	DIR_DOWN, -1796, -1022,
	DIR_UP, -133, 1277,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 3 */ { 1, 0,
	DIR_DOWN, 1015, -866,
	DIR_DOWN, 1664, -382,
	DIR_DOWN, -1044, -955,
	DIR_DOWN, -1854, -585,
	0, 0, 0,
	0, 0, 0 },
	/* 4 */ { 2, 0,
	DIR_RIGHT, -2125, -1046,
	DIR_UP, 1904, 538,
	DIR_DOWN, -2124, -435,
	DIR_LEFT, 1806, 1115,
	0, 0, 0,
	0, 0, 0 },
	/* 5 */ { 2, 0,
	DIR_RIGHT, -1665, -666,
	DIR_UP, 924, -82,
	DIR_DOWN, -484, -1095,
	DIR_LEFT, 1526, 975,
	DIR_UP, -1220, 830,
	0, 0, 0 },
	/* 6 */ { 3, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 7 */ { 3, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 8 */ { 3, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 9 */ { 3, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 10 */ { 4, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 11 */ { 4, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 12 */ { 4, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 13 */ { 1, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 14 */ { 1, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 15 */ { 1, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 16 */ { 2, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 17 */ { 2, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 18 */ { 3, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 19 */ { 3, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 20 */ { 4, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 21 */ { 4, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 22 */ { 4, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 23 */ { 1, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 24 */ { 1, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 25 */ { 1, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 26 */ { 2, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 27 */ { 2, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 28 */ { 3, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 29 */ { 3, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 30 */ { 3, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 31 */ { 3, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 32 */ { 4, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 },
	/* 33 */ { 4, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0,
	0, 0, 0 }
};

#endif